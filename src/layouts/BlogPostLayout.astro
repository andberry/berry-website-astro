---
import Container from "@components/utils/Container.astro";
import BaseLayout from "@layouts/BaseLayout.astro";
import HeroTitle from "@components/typography/HeroTitle.astro";
import type { CollectionEntry } from "astro:content";
import Copy from "@components/typography/Copy.astro";
import BlogCardTitle from "@components/typography/BlogCardTitle.astro";
import BlogTag from "@components/blog/BlogTag.astro";
import { Image } from "astro:assets";
import { Icon } from "astro-icon";
import type { MarkdownHeading } from "astro";
import Toc from "@components/blog/Toc.astro";

export interface Props {
  post: CollectionEntry<"blog">;
  headings: MarkdownHeading[];
}

const { post, headings } = Astro.props;
const postData = post.data;
const postDate = postData.date;
const dateFormatter = new Intl.DateTimeFormat("en-CA", {
  year: "numeric",
  month: "long",
  day: "numeric",
});
const displayDate = dateFormatter.format(postData.date);
---

<BaseLayout metaTitle={`${postData.title} - andberry.me`}>
  <div>
    <header>
      <div class="py-8 xl:py-12 2xl:py-24">
        <Container size="md">
          <HeroTitle as="h1" class="dark:text-lightgray text-black">
            {postData.title}
          </HeroTitle>
          <time datetime={postDate.toISOString()} class="text-md font-light">
            {displayDate}
          </time>
        </Container>
      </div>
      {
        postData.heroImage && (
          <div class="w-full md:h-[40vh] lg:h-[60vh] xl:min-h-[400px]">
            <Image
              src={postData.heroImage}
              alt=""
              class="object-cover object-center w-full block h-full"
              widths={[375, 768, 1280, 1920]}
              sizes="100vw"
            />
          </div>
        )
      }
    </header>
    <div class="py-12 xl:py-24">
      <Container size="md">
        <div class="lg:grid lg:grid-cols-12 lg:gap-10 xl:gap-16">
          <article
            class="lg:col-span-8 xl:col-start-2 xl:col-span-7 3xl:col-start-1 3xl:col-span-8"
          >
            {
              headings?.length > 0 && (
                <div class="dark:bg-darkgray bg-lightgray py-4 px-6 mb-12 dark:text-mediumgray">
                  <Toc headings={headings} />
                </div>
              )
            }

            <div
              class="prose prose-neutral max-w-screen-3xl
              prose-p:dark:text-mediumgray prose-p:text-black
              prose-a:dark:text-mediumgray prose-a:dark:font-normal
              prose-blockquote:text-white
              prose-strong:dark:text-mediumgray
              prose-ul:my-0 prose-li:dark:text-mediumgray
              prose-headings:dark:text-white prose-headings:text-black prose-headings:leading-[1] prose-headings:mb-3
              prose-h2:text-clamph2 prose-h3:text-clamph3
              prose-headings:relative
              xl:prose-headings:mt-16
              dark:prose-code:text-white prose-code:text-black prose-code:text-sm prose-pre:leading-none prose-code:font-mono
              prose-p:my-0 prose-p:mb-5"
            >
              <Copy size="medium">
                <slot />
              </Copy>
            </div>
          </article>

          <aside class="relative lg:col-span-4 xl:col-span-4 mt-8 lg:mt-0">
            <div class="lg:sticky lg:top-24">
              <div
                class="p-5 dark:bg-darkgray bg-lightgray text-black0 dark:text-white rounded-md"
                id="blog-post-infos"
              >
                <BlogCardTitle>{postData.title}</BlogCardTitle>
                <div>{displayDate}</div>
                {
                  postData.tags && (
                    <div class="flex gap-2 mt-4">
                      {postData.tags.map((t) => (
                        <BlogTag name={t} />
                      ))}
                    </div>
                  )
                }
                <div class="mt-8">
                  <a
                    href="/blog"
                    class="flex gap-2 group hover:text-purpleLight"
                  >
                    <Icon
                      name="la:long-arrow-alt-left"
                      class="w-5 dark:text-white leading-none mt-1 group-hover:-translate-x-1 transition-all ease-out duration-200 group-hover:text-purpleLight"
                    />
                    <span>Back to Blog Index</span>
                  </a>
                </div>
              </div>

              <div
                id="blog-post-progress-bar"
                class="w-full h-1 bg-purpleLight mt-4 rounded-md"
              >
              </div>

              {
                headings.length > 0 && (
                  <div
                    class="mt-4 p-5 bg-lightgray dark:bg-darkgray hidden lg:block"
                    id="blog-sidebar-toc"
                  >
                    <Toc headings={headings} showTitle={false} />
                  </div>
                )
              }
            </div>
          </aside>
        </div>
      </Container>
    </div>
  </div>
</BaseLayout>
