---
import Container from "@components/utils/Container.astro";
import BaseLayout from "@layouts/BaseLayout.astro";
import HeroTitle from "@components/typography/HeroTitle.astro";
import type { CollectionEntry } from "astro:content";
import Copy from "@components/typography/Copy.astro";
import BlogCardTitle from "@components/typography/BlogCardTitle.astro";
import BlogTag from "@components/blog/BlogTag.astro";
import { Image } from "astro:assets";
export interface Props {
  postData: CollectionEntry<"blog">["data"];
}
const { postData } = Astro.props;
---

<BaseLayout>
  <article>
    <header>
      <div class="pt-32 pb-8 2xl:pt-48">
        <Container size="md">
          <HeroTitle as="h1" class="dark:text-lightgray text-black">
            {postData.title}
          </HeroTitle>
          <time
            datetime={`${postData.createdAt
              .toString()
              .slice(0, 4)}-${postData.createdAt
              .toString()
              .slice(4, 6)}-${postData.createdAt.toString().slice(6, 8)}`}
            class="text-md font-light"
          >
            {postData.createdAtDisplay}
          </time>
        </Container>
      </div>
      {
        postData.heroImage && (
          <div class="w-full md:h-[40vh] lg:h-[60vh] xl:min-h-[400px]">
            <Image
              src={postData.heroImage}
              alt=""
              class="object-cover object-center w-full block h-full"
              widths={[360, 640, 1024, 1280, 1920]}
              sizes="100vw"
            />
          </div>
        )
      }
    </header>
    <section class="py-12 xl:py-24">
      <Container size="md">
        <div class="lg:grid lg:grid-cols-12 lg:gap-10 xl:gap-16">
          <div
            class="lg:col-span-8 xl:col-start-2 xl:col-span-7 3xl:col-start-1 3xl:col-span-8"
          >
            <div
              class='prose prose-neutral max-w-screen-3xl
              prose-p:dark:text-darkgray prose-p:font-exo2
              prose-a:dark:text-mediumgray prose-a:dark:font-normal
              prose-blockquote:text-white
              prose-strong:dark:text-mediumgray
              prose-ul:my-0 prose-li:dark:text-mediumgray
              prose-headings:text-pink2 prose-headings:leading-[1] prose-headings:mb-8
              prose-h2:text-clamph2 prose-h3:text-clamph3
              prose-headings:relative
              prose-headings:before:block prose-headings:before:absolute prose-headings:before:-left-4 prose-headings:before:top-0 prose-headings:before:content-[""] prose-headings:before:w-1 prose-headings:before:h-full prose-headings:before:bg-purple
              xl:prose-headings:mt-0 prose-headings:ml-4
              prose-code:text-white prose-code:text-sm prose-pre:leading-none prose-code:font-mono
              prose-p:my-0 prose-p:mb-5'
            >
              <Copy size="medium">
                <slot />
              </Copy>
            </div>
          </div>
          <div class="relative lg:col-span-4 xl:col-span-4 mt-8 lg:mt-0">
            <div
              class="lg:sticky lg:top-24 p-5 bg-purple text-white rounded-md"
            >
              <BlogCardTitle>{postData.title}</BlogCardTitle>
              <div>{postData.createdAtDisplay}</div>
              {
                postData.tags && (
                  <div class="flex gap-2 mt-4">
                    {postData.tags.map((t) => (
                      <BlogTag name={t} />
                    ))}
                  </div>
                )
              }
              <div class="mt-8">
                <a href="/blog">Back to Blog Index</a>
              </div>
            </div>
          </div>
        </div>
      </Container>
    </section>
  </article>
</BaseLayout>
